html{
  background-color: var(--col05);    
}
    
*{
  box-sizing: border-box;
  margin: 0;
  cursor: url('img/puzzle.png') auto;
  }
/* this was an attempt to style the cursor of the page with a custom icon instead of the auto css cursor. 
However, as the image was not showing up on the web, I rpelaced it with a simple auto and pointer (when on hover)*/
.body{
  cursor: url('img/puzzle.png') auto;
}


    :root{
        --col01: #080808;
        --col02: #F8F7F9;
        --col03: #E100ED;
        --col04: #6404AF;
        --col05: #ebff3b;
        --col06: #5db1ff; 
    }
    
h1{
  color: var(--col04);
  font-family: 'Pacifico', cursive;
  font-weight: normal; 
  font-size: 40px;
  text-align: center;
  text-decoration: underline;
}
    

 
.container {
  display: flex;
  position: relative;
  width: 50%;
  max-width: 300px;
  margin-left: 6%;
}

    
/* most of the visual elements shown in the painting are squares and circles, so I am creating these shapes on this page
 using css boxes, adapting their properties to make them look closer to the original painting.*/

.black-blue-circles{
display: grid;
grid-template-columns: 1fr 1fr 1fr;
position: absolute;
margin-top: 35%;
}

/* However, instead of just reproducing shapes from the original art work, I am adding some personal taste to the 
composition as well. The black and blue circles remind me of the diaphragm of loudspeakers. This is a good affordance that
can provide feedback: visual feedback, as the circle vibrates to imitate the vibration of loudspeakers; audio feedback, 
by playing an audio track. Each circle plays a different audio when users hover over the different circles.*/
#box1{
    display: grid;
    position: absolute; 
    z-index: 3;
    background-color: var(--col01);
    border: solid 6px var(--col06);
    border-radius: 50px;
    width: 70px;
    height: 70px;
    margin-top: 70px;
    margin-left: 70px;
}
#box1:hover{
  cursor: pointer;
  animation: vibrate 0.3s linear infinite both;
}

/* second speaker box */
#box2{
    display: grid;
    position: absolute; 
    z-index: 2;
    background-color: var(--col01);
    border: solid 8px var(--col04);
    border-radius: 100px;
    width: 110px;
    height: 110px;
    margin-top: 50px;
    margin-left: 50px;
}
#box2:hover{
  cursor: pointer;
  animation: vibrate 0.3s linear infinite both;
}

/* third speaker box */
#box3{
    display: grid;
    position: absolute; 
    z-index: 1;
    background-color: var(--col01);
    border: solid 8px var(--col02);
    border-radius: 100px;
    width: 200px;
    height: 200px;
    margin-top: 8px;
    margin-left: 8px;
}
#box3:hover{
  cursor: pointer;
  animation: vibrate 0.3s linear infinite both;
}


/* large black circle below every other circle. I added no amination to this large circles, to keep it still and use it 
as a frame for the other shapes it contains.  */
#box4{
display: grid;
position: absolute; 
z-index: auto;
background-color: var(--col01);
border: none;
width: 220px;
height: 220px;
border-radius: 120px;
}


/* 2 black, thin rectangles */
#box5{
display: grid;
position: absolute; 
z-index: auto;
background-color: var(--col01);
border: solid 1px var(--col01);
width: 3px;
height: 370px;
margin-top: 0%;
margin-left: 500px;
transform: rotate(-15deg);
}

#box6{
    display: grid;
    position: absolute; 
    z-index: auto;
    background-color: var(--col01);
    border: solid 1px var(--col01);
    width: 3px;
    height: 480px;
    margin-top: -0px;
    margin-left: 500px;
    transform: rotate(70deg);
    }
    

/* circles rolling down */
/* as this small circle is closer to the left side of the page, I am letting roll out to the left, on mouse hover */
#box7{
    display: grid;
    position: absolute; 
    z-index: 1;
    background-color: var(--col02);
    border: solid 5px var(--col03);
    border-radius: 20px;
    width: 75px;
    height: 75px;
    margin-top: 240px;
    margin-left: 447px;
}
#box7:hover{
  cursor: pointer;
  animation: roll-bottom 2s ease-in both;
}

#box8{
    display: grid;
    position: absolute; 
    z-index: auto;
    background-color: var(--col02);
    border: solid 5px var(--col01);
    border-radius: 20px;
    width: 75px;
    height: 75px;
    margin-top: 265px;
    margin-left: 367px;
}
#box8:hover{
  cursor: pointer;
  animation: roll-top 2s ease-in both;
}

#box9{
    display: grid;
    position: absolute; 
    z-index: auto;
    background-color: var(--col02);
    border: solid 5px var(--col06);
    border-radius: 20px;
    width: 75px;
    height: 75px;
    margin-top: 295px;
    margin-left: 285px;
}
#box9:hover{
  cursor: pointer;
  animation: roll-left 2.3s ease-in both;
}

/* small bouncing ball */
#box10{
    display: grid;
    position: absolute; 
    z-index: 1;
    background-color: var(--col06);
    border: solid 5px var(--col02);
    border-radius: 50px;
    width: 35px;
    height: 35px;
    margin-top: 85px;
    margin-left: 550px;
}
#box10:hover{
  cursor: pointer;
  animation: bounce 2s both;
}


/* glass shapes. 
In the original painting, these shapes are semi-transparent and appear to be of a shiny material. 
In this project, I made them look as sound as if they are made of glass, so they have a lower opacity and whenever users 
hover over them, they hear high-pitched noises that glass objects would normally make. */
#box11{
    z-index: 1;
    width: 0; 
    height: 0; 
    opacity: 40%;
    border-left: 65px solid transparent;
    border-right: 65px solid transparent;
    border-bottom: 195px solid var(--col04);
    transform: rotate(190deg);
    margin-top: 130px;
    margin-left: 680px;
}
#box11:hover{
  cursor: pointer;
  -webkit-animation: glass-shake 0.8s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
  animation: glass-shake 0.8s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
  transform: rotate(190deg);
}


#box13{
    display: grid;
    position: absolute; 
    z-index: auto;
    background-color: var(--col06);
    opacity: 40%;
    border: solid 2px var(--col01);
    border-radius: 100px;
    width: 175px;
    height: 175px;
    margin-top: 25px;
    margin-left: 750px;
}
#box13:hover{
  cursor: pointer;
  animation: glass-shake 0.8s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
  transform: rotate(190deg);
}


/* Coloured rectangle, with dashed border - below the glass shapes */
#box14{
    display: grid;
    position: absolute; 
    z-index: auto;
    background-color: var(--col03);
    border: dashed 5px var(--col01);
    width: 3px;
    height: 400px;
    margin-top: 10%;
    margin-left: 730px;
    transform: rotate(60deg);
    }


/* first square on the right, resizes and changes colour on hover */
#box-a{
    display: grid;
    position: absolute; 
    z-index: 1;
    background-color: var(--col03);
    border: solid 5px var(--col01);
    width: 35px;
    height: 35px;
    margin-top: 300px;
    margin-left: 900px;
}
.box-a:hover{
  z-index: 1;
  cursor: pointer;
  width: 135px;
  height: 135px;
  animation: rotate 3s linear both infinite;
}




/* pop ups */

/* pop up number */
#popup-box{
    position: relative;
    display: inline-block;
    color: var(--col02);
    background-color: var(--col02);
    border: solid 4px var(--col04);
    border-radius: 30px;
    width: fit-content;
    height: fit-content;
    text-align: center;
    font-family: 'Pacifico';
    font-size: 30px;
    font-weight: bolder;
    color: var(--col01);
    cursor: pointer;
    padding: 0px 20px; /* padding need around the numbers to leave some negative space between the numbers and border.*/
}
#popup-box:hover{
    cursor: pointer;
    background: var(--col03);
    color: var(--col02);
    box-shadow: var(--col01) 5px 5px 5px;
}


  /*  popup content */
  .popup .popuptext {
    visibility: hidden;
    width: 120px;
    height: fit-content;
    background-color: var(--col02);
    color: var(--col01);
    font-family: 'Pangolin', cursive;
    font-size: 16px;
    text-align: left;
    border-radius: 10px;
    padding: 28px 5px;
    position: absolute;
    z-index: 5;
    margin: 50%;
  
  }


/* hide and show effect  on mouse click*/
.popup .show {
    visibility: visible;
  }
  




  /* overlay effect to show 500 words on a different layer*/
 
  .overlay {
    height: 0%;
    width: 100%;
    position: fixed;
    z-index: 4;
    top: 0;
    left: 0;
    background-color: var(--col01);
    opacity: 95%;
    overflow-y: hidden;
    transition: 0.5s;
  }
  
  .overlay-content {
    z-index: 5;
    position: relative;
    width: 90%;
    text-align: center;
    padding-left: 10%;
    margin-top: 80px;
  }

  p{
    font-family: 'Pangolin';
    font-size: 20px;
    text-align: left;
    color: var(--col02);

  }

.p1{
    font-family: 'Pangolin';
    font-size: 18px;
    text-align: right;
    color: var(--col02);
}
  .overlay .closebutton {
    z-index: 5;
    position: absolute;
    top: 20px;
    right: 45px;
    font-size: 60px;
    color: var(--col02);
  }
  
  .closebutton:hover{
  cursor: pointer;
  color: var(--col03);
  }





/* keyframes for animations used on the page */
  @media screen and (max-height: 450px) {
    .overlay {overflow-y: auto;}
    .overlay a {font-size: 20px}
    .overlay .closebtn {
    font-size: 40px;
    top: 15px;
    right: 35px;
    }
  }



  @keyframes vibrate {
    0%{
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
    100%{
      transform: translate(0);
    }
  }


  @keyframes bounce {
      0% {
                transform: translateX(0);
                animation-timing-function: ease-out;
      }
      15% {
                transform: translateX(-10);
                animation-timing-function: ease-out;
      }
      25% {
                transform: translateX(-38px);
                animation-timing-function: ease-in;
      }
      38% {
                transform: translateX(0);
                animation-timing-function: ease-out;
      }
      52% {
                transform: translateX(-80px);
                animation-timing-function: ease-in;
      }
      70% {
                transform: translateX(0);
                animation-timing-function: ease-out;
      }
      85% {
        opacity: 1;
      }
      100% {
                transform: translateX(-1000px);
        opacity: 0;
      }
    }
    

/* glass-shake */

@keyframes glass-shake {
  0%,
  100% {
            transform: translateX(0);
  }
  10%,
  30%{
    transform: translateX(-10px);
    transform: translateX(-50px); /* rolling glass sphere??????????? */
  }
  50%,
  70% {
            transform: translateX(-10px);

  }
  20%,
  40%,
  60% {
            transform: translateX(10px);
  }
  80% {
            transform: translateX(8px);
  }
  90% {
            transform: translateX(-8px);
  }
}



/* roll-left animation */

@keyframes roll-left {
  0% {
    transform: translateX(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateX(-1000px) rotate(-540deg);
    opacity: 0;
  }
}

/* roll-out to the bottom of the page - circle with pink rounded corners  */

@keyframes roll-bottom {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(800px) rotate(540deg);
    opacity: 0;
  }
}

/* roll out to the top of the page - circle with black rounded  border */

@keyframes roll-top {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-800px) rotate(-540deg);
    opacity: 0;
  }
}



/* roation animation */
@keyframes rotate{
  0%{
    transform: rotate(0deg);
  }
  50%{
    transform: rotate(180deg);
  }
  100%{
    transform: rotate(360deg);
  }
}
